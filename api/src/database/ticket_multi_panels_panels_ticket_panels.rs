//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "ticket_multi_panels_panels_ticket_panels")]
pub struct Model {
    #[sea_orm(
        column_name = "ticketMultiPanelsId",
        primary_key,
        auto_increment = false
    )]
    pub ticket_multi_panels_id: i32,
    #[sea_orm(column_name = "ticketPanelsId", primary_key, auto_increment = false)]
    pub ticket_panels_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::ticket_multi_panels::Entity",
        from = "Column::TicketMultiPanelsId",
        to = "super::ticket_multi_panels::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TicketMultiPanels,
    #[sea_orm(
        belongs_to = "super::ticket_panels::Entity",
        from = "Column::TicketPanelsId",
        to = "super::ticket_panels::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    TicketPanels,
}

impl Related<super::ticket_multi_panels::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TicketMultiPanels.def()
    }
}

impl Related<super::ticket_panels::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::TicketPanels.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
