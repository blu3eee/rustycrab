//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.4

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "embed_info")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub url: Option<String>,
    pub timestamp: Option<i8>,
    pub color: Option<String>,
    #[sea_orm(column_name = "footerIcon")]
    pub footer_icon: Option<String>,
    pub image: Option<String>,
    pub thumbnail: Option<String>,
    pub author: Option<String>,
    #[sea_orm(column_name = "authorIcon")]
    pub author_icon: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub title: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub description: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub footer: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub fields: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::auto_responses::Entity")]
    AutoResponses,
    #[sea_orm(has_one = "super::bot_guild_welcomes::Entity")]
    BotGuildWelcomes,
}

impl Related<super::auto_responses::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::AutoResponses.def()
    }
}

impl Related<super::bot_guild_welcomes::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::BotGuildWelcomes.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
